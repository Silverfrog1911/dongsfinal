<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dongs.dongsfinal.mapper.PurchaseDao">
  <resultMap id="BaseResultMap" type="com.dongs.dongsfinal.model.Purchase">
    <id column="purchase_id" jdbcType="INTEGER" property="purchaseId" />
    <result column="good_name" jdbcType="VARCHAR" property="goodName" />
    <result column="purchase_status" jdbcType="VARCHAR" property="purchaseStatus" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="should_receive_amount" jdbcType="INTEGER" property="shouldReceiveAmount" />
    <result column="SKU" jdbcType="VARCHAR" property="sku" />
  </resultMap>

  <resultMap id="BaseResultMap2" type="com.dongs.dongsfinal.model.poly.PurchaseShow">
    <id column="purchase_id" jdbcType="INTEGER" property="purchaseId" />
    <result column="good_name" jdbcType="VARCHAR" property="goodName" />
    <result column="purchase_status" jdbcType="VARCHAR" property="purchaseStatus" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="should_receive_amount" jdbcType="INTEGER" property="shouldReceiveAmount" />
    <result column="SKU" jdbcType="VARCHAR" property="sku" />
    <association property="receive" javaType="com.dongs.dongsfinal.model.Receive">
      <id column="receive_id" jdbcType="INTEGER" property="receiveId" />
      <result column="good_id" jdbcType="INTEGER" property="goodId" />
      <result column="purchase_id" jdbcType="INTEGER" property="purchaseId" />
      <result column="real_receive_amount" jdbcType="INTEGER" property="realReceiveAmount" />
      <result column="receive_date" jdbcType="TIMESTAMP" property="receiveDate" />
    </association>
  </resultMap>

  <sql id="Base_Column_List">
    purchase_id, good_name, purchase_status, receiver, should_receive_amount, SKU
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from purchase
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </select>
  <select id="selectBygoodName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from purchase
    where good_name = #{goodName,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from purchase
  </select>
  <select id="selectByStatus" parameterType="java.lang.String" resultMap="BaseResultMap2">
    select *
    from purchase p left join receive r on p.purchase_id=r.purchase_id
    where p.purchase_status=#{status}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from purchase
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBygoodName">
    delete from purchase
    where good_name = #{goodName,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="purchase_id" keyProperty="purchaseId" parameterType="com.dongs.dongsfinal.model.Purchase" useGeneratedKeys="true">
    insert into purchase (good_name, purchase_status, receiver, 
      should_receive_amount, SKU)
    values (#{goodName,jdbcType=VARCHAR}, #{purchaseStatus,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, 
      #{shouldReceiveAmount,jdbcType=INTEGER}, #{sku,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="purchase_id" keyProperty="purchaseId" parameterType="com.dongs.dongsfinal.model.Purchase" useGeneratedKeys="true">
    insert into purchase
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodName != null">
        good_name,
      </if>
      <if test="purchaseStatus != null">
        purchase_status,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="shouldReceiveAmount != null">
        should_receive_amount,
      </if>
      <if test="sku != null">
        SKU,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodName != null">
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseStatus != null">
        #{purchaseStatus,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="shouldReceiveAmount != null">
        #{shouldReceiveAmount,jdbcType=INTEGER},
      </if>
      <if test="sku != null">
        #{sku,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dongs.dongsfinal.model.Purchase">
    update purchase
    <set>
      <if test="goodName != null">
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseStatus != null">
        purchase_status = #{purchaseStatus,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="shouldReceiveAmount != null">
        should_receive_amount = #{shouldReceiveAmount,jdbcType=INTEGER},
      </if>
      <if test="sku != null">
        SKU = #{sku,jdbcType=VARCHAR},
      </if>
    </set>
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dongs.dongsfinal.model.Purchase">
    update purchase
    set good_name = #{goodName,jdbcType=VARCHAR},
      purchase_status = #{purchaseStatus,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      should_receive_amount = #{shouldReceiveAmount,jdbcType=INTEGER},
      SKU = #{sku,jdbcType=VARCHAR}
    where purchase_id = #{purchaseId,jdbcType=INTEGER}
  </update>
  <update id="updateStatus2WORK">
    update purchase
    set purchase_status = 'WORK'
    where good_name = #{goodName,jdbcType=VARCHAR}
  </update>
  <update id="updateStatus2CHECKING">
    update purchase
    set purchase_status = 'CHECKING'
    where good_name = #{goodName,jdbcType=VARCHAR}
  </update>
  <update id="updateStatus2RECEIVED">
    update purchase
    set purchase_status = 'RECEIVED'
    where good_name = #{goodName,jdbcType=VARCHAR}
  </update>
</mapper>